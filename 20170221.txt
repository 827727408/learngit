《JavaScript高级程序设计》
这个庙有25段小故事。
第1段是背景：描述了夏娃JavaScript与姨妈ECMAScript的关系，逗你母DOM（Document Object Model,文本的对象模型）、伯母（Browser Object Model浏览器的对象模型）。
第2段夏娃插入HTML的各种方法，还讨论了夏娃是什么人content-type以及与棍子<script>元素的关系。
第3段夏娃文化的方言，比较了与普通话不一样的地方，还介绍了内置操作符有关的类型转换问题,就是方普。
第4段变量妖精、魔法范围、和消耗内存问题。
第5段讲引用朋友类型 夏娃关系里面的object 和array朋友。
第6段面向具体对象的程序设计
第7故事内涵表达式，这是夏娃最大的特征，设计闭包骚包、this对象的角色手、模块模式肌肉一块一块的、和创建是有对象成员女朋友还组队了不成？
第八个故事伯母对象包括window/document/location/navigator/screen5个温豆 道客特 陆凯什 哪位gay squreen
第九个故事客户端检测 机型 及其支持特性的手段，包括特性检测及用户代理字符串的不同技术。每一种手段的优缺点及适用情形给出了详细说明。
第十个故事XML和逗母的关系
11逗你母扩展运动，涉及Selectors API/Elemnt Traversal API和HTML5
12逗母太好玩了，有了逗母2 逗母3，是升级版的逗母
13事件
14表单脚本 用夏娃增强交互性 调教
15调教CANVAS做游戏
16调教HTML脚本
17错误处理与调试
18夏娃与XML 夏娃在XML时候的操作
19E4X与逗母的差别，不是一个类型的好吧
20作为XML的替身JSON,名字挺好听的，他的撕裂解析
21Ajax与Comet 颖儿口中的阿贾克斯，包括XMLhttprequest对象及CORS跨来源资源共享API实现跨域Ajax通信。
22高级技巧调教 currying
23离线应用与客户端存储
24 最佳实践 编码技巧、格式化、通用性、维护性
25 新兴的API ，包括WEB计时和文件 API

书中的段子库http://p2p.wrox.com/


第一个故事：
夏娃的世界有三个人 姨妈Script 是她的心；逗你母是 文范的对象模型；伯母 是流器的对象类型；
姨妈Script没有收入 输入输出，web是实现它更好的宿主之一。宿主不仅提供基本的姨妈的基本需求，还提供姨妈的扩展，以便姨妈与web的贴心交流，语言与环境的对接交互。逗你母是帮姨妈实现更具体的功能。其他宿主环境包括Node（一种服务端JavaScript平台）和Adobe Flash.

姨妈都有什么需求呢？规定了说话是这个说的，怎么说的呢，包括语法、类型、语句、关键字、保留字、操作符、对象  兼容Unicode

逗你母 是文档对象模型，作用是亲口，用于HTML 的应用程序编程接口（API Application Programming Interface）
逗母把整个页面应社会多层节点结构，借助逗母提供的API，开发人员很轻松的删除、添加任何节点。
逗你母怎么来的呢？因为Netscape和微软的DHTML 吵架了，浏览器的页面实现也有问题了，互不兼容。逗你母就是拼接逗比的外表协调呀。
其实逗母的心事为了映射基于XML的文档结构，以便简化操作；顺便扩建了DOM HTML模块，加了对HTML 的照顾方法。

如果逗母1 是为了映射文档结构，逗母2 就是为了加细节扩充，比如鼠标、用户界面时间、范围、遍历（迭送DOM文档的方法），2还做了牛逼的事 增加了CSS的支持。
光说没用啊，袋子里面都有啥？
逗母2给出了新接口的定义：DOM视图 DOM 事件 DOM样式  DOM遍历和范围，
逗母3 引入了以统一方式加载和保存文档的方法--在（DOM Load and Save）模块中定义，新增了验证文档的方法--在DOM验证（DOM Validation）模块重定义。
看到逗母0，把他当空气无视。

其他语言用到了逗母SVG MathML SMIL同步多媒体集成语言

web浏览器爱理不理的接受了，Netscape后来接受，他的下家Mozilla是全盘接受，100%兼容。

伯母是什么鬼呢？他只处理浏览器窗口和框架，比如吧：弹出新浏览器窗口的功能；移动、缩放和关闭浏览器窗口的功能、提供浏览器详细信息的navigator对象；提供浏览器所加载页面的详细信息的location对象；提供用户显示器分辨率详细信息的screen对象；对cookies的支持；像XMLHttpRequest和IE的ActiveXObject这样的自定义对象

第二个故事
2.1
HTML4为<script>元素定义6个属性 七匹狼的山寨版---六匹狼 
async可选。表示应该立刻下载脚本，但不妨碍页面中的其他操作，只对外部脚本有效
charset可选。表示通过src属性指定的代码的字符集，很少有人用。
defer 可选。代表脚本可以延迟到文档完全被解析和显示之后再执行。只对外部脚本有效。外部外部外部
language 已废弃 可可西里没保护好，少了一只
src可选 。表示包含要执行代码的外部文件
type可选。表示写代码使用的脚本语言的内容类型（也被人称为MIME类型）。虽然text/javascript不被推荐，但是还是在用。事实上，服务器在传JavaScript文件时使用的MIME类型通常是application/x-javascript.但在type中设置这个值经常被忽略。

使用<script>有两张用法，直接插入和包含外部的js文件。
如果使用外部的文件 src不可少，如<script type="text/javascript" src="example.js"></script>


外部的js文件带有.js扩展名，但是这个扩展名不是必须的，也就是浏览器不会检查JS文件的扩展名，这样一来，使用JSP、PHP 或者其他服务器端语言动态生成js代码就成了可能。但是服务器吧，还是要扩展名决定未响应时间的哪种MIME类型；如果不用.js扩展名，就请保证服务器能返回正确的MIME类型吧。


src还有点矫情呢，在<scripe></script>之间只能有src，如果有其他的js代码，他就不反应了。
src和img一样会红杏出墙，可以 引用外部域的js文件，在访问自己不能控制的服务器上的JS文件，要小心，因为他们随时可以替换文件中的代码。

<script>的顺序：只要不出现async和defer,就会从上往下走。
2.1.1 在哪儿里带着
现在的web将它放到<body>里面
2.1.2延迟脚本
defer相当于高速浏览器先下载，延迟执行。
2.1.3异步脚本
async的意思不是让页面等待脚本的下载和执行，而是异步加载页面其他内容。
异步脚本一定会在load时间之前执行，可能会在DOMContentLoaded时间出发之前或者之后执行。
2.1.4作者让掠过
2.1.5不推荐使用的语法

大数据：
https://www.zhihu.com/question/20176089 

所有浏览器都支持了，作者说这些实在表明自己阅历很多，作者在装逼，110吗？有人在装逼 场面无法控制

2.2 嵌入代码与外部文件
放在里面的和遥控器

虽然手动控制的可以，但是还是最好用外部遥控器控制的。
使用外部遥控又以下几点好处：
可维护性：不用碰到HTML就可以换角度，编辑JS代码。省掉一些麻烦。
可缓存性：如果有两各页面都是用一个文件，那么这个文件只需下载一次，加快页面加载。没有那么多手，省资源了，而且因为生资源，所以快了。
适应未来：HTML和XHTML使用的包含外部语法相同，他们自适应，未来各种型号的直接自适应就好了，手动还要根据不同，用不同的手法。

2.3文档模式
混杂模式和标准模式，混杂模式体现在处理图片的间缝的时候，在没有声明是标准模式之后，就会出现混杂模式，就是风流倜傥的模式。
开启正常模式可以用<! DOCTYPE html>来开启
还有准标准模式，就是稍微有点变化的标准模式，各种味道欢迎品尝，一共七款，差异很小。

2.4<noscript>元素
当人不喜欢用脚本，器具的时候，或者器具坏掉的时候，用户就会显示<noscript>的内容，我不要。用户也看不到<script>.

2.5小结
夏娃插人HTML需要棒子<script >,他们就完成了合体。
在包含外部JS文件的时候，必须将SRC设置到相应的URL；柜子号
所有<script>在页面中 按照先后顺序解析，在不使用defer和async的情况下，只有前面的<script>解析完，才会解析后面的；
就是一套做下来显示这个频路，后是哪个频率，只要不设置指定的模式；
由于浏览器回解析不用defer的，所以把<script>放在body里面；
async异步，随机模式

3话
任何人都和别人交流才能被用到，所以说的话能听懂很重要。
涉及语法，比如山东人的倒装句；
操作符，就是动词，很重要嘛，说完就要行动嘛；
数据类型，用什么东西交换，就是物质交换的目的嘛；
内置功能，就是他会啥，有的会修脚，有的会美容，纹眉；

3.1语法
 大姨妈说话有C北京话的味道，和其他C北京话周围Java和Perl东北话和天津话的味道。大姨妈是北方人。
3.1.1区分大小写
一切一切都很清楚，l、n，l、r，都分得很清楚。比如，函数名不能用typeof，他是一个关键词，就像春晚不能用除夕一样，关键词和天皇有关。但是吧typeOf就可以是函数名，就像调侃哎。

3.1.2 标识符
指变量、函数、属性的名字。起名字啊要有故事。  
就相当于拍拍大腿就知道，要讲故事了，他要讲故事有很多习惯，第一个字符必须是字母、下划线或者一个美元符号。字母比如“哎”下划线“拍拍腿”，美元符号“敲了下美元硬币”
其他字符也可以是，但是第一个字符必须是。
名字啊也可以包换ASCII或者Unicode字母字符，比如啊。。我都打不出来的怪力乱神。
大姨妈给孩子取名的时候才用驼峰大小写格式，就是第一个字母小写，剩下的每个单词的首字母大写。想让他们像骆驼一样有耐力。比如firstSecond,虽然他没强制自己的孩子这样写，但是毕竟孩子是大姨妈的亲生骨肉，还是给他留点面子。

不能把关键字、保留字、true、false、null 5大政治名用作孩子的名字，没办法他的世界没有人类世界自由，名字都不能乱起，就像古代一样。

3.1.3注释
大姨妈的解说员，解说员是北京话的，有时候是一句话一个翻译的有时候是一段话一个翻译的，单行注释用两个斜杠开头//单行注释；块级注释用一个斜杠和一个星星开头/* 一个星星和斜杠结尾*/，
/*
*这是一个块级注释，没有必要加这个星星，但是是为了更好的让人明白*这是一段话的翻译，就像我们说话“说了那么多，意思是”
**/
3.1.4严格模式
大姨妈也有政治严肃的时候，就是不确定的行为得到处理，不安全的操作也会抛出错误，就是有个小蜜给他说，你这样做不如那样做，你这样做有让人抓到把柄
在脚本中启用严格模式，可以在顶部添加以下代码“use strict”。
这个代码看起来是个字符串，乱七八糟的东西，但是他其实是个编译指示，用于告诉支持的夏娃引擎切换到严格模式。
也可以在内涵的时候指定内涵在严格模式下执行：founction doSomething(){“use strict”;}严格模式下，夏娃的执行结果会有很大的不同。

3.1.5语句
 说的话有一个特点。姨妈说完用分号结尾，就比如徐州人说话后面比较拖。最好每句话都拖，突然来个不拖，陌生人分不清有没有说完。开发人员也可以通过删除多余的空格来压缩大姨妈代码，就是说话空隙，提高了说话的性能，增进代码的性能。
可以用多条语句组合刀一个代码块中，用花括号扩住，比如说别忘了种花，铲子在那儿，在哪儿洗手。。用花括号扩住，前面写种花。
虽然条件控制语句（如if条件语句）旨在执行多条语句的情况下才要求使用代码，但最佳实践实始终在控制语句中使用代码块--及时代码块中只有一条语句。意思是条件满足只有所有的执行都放在花括号里面，因为执行很少有一个动作吧，一个动作只能是吐槽，只动嘴。记住，执行啊一定用花括号统统包围。

3.2关键字和保留字
 姨妈在262国庆那天很盛大，授予了具有特定用途的关键字，就是军官，这个关键词可用于表示控制语句的开始或者结束，或者用于狮子那个特定操作等。你看看控制这个词就很NB，控制运动的开始或结束，有特权执行特殊行动。
我们看看大姨妈的全部军官-关键字
break 打破别人的生意 
do 挥臂下去 
instanceof 替代私企
typeof  给你个标签 是好人还是坏人 是农民还是商人
case 小情况鸡毛算破的事情
else  给你个选择的机会
new 重新做人吧 兄弟
var  魔法变变变
catch  抓住你的***
finally 一直不要变，很稳固，就像国企一样
return 给我你的果子
void  大喇叭说
continue   收了点保护费，继续继续
for  给谁收的保护费
switch 直达生出个天才儿童有出息 改变命运 要不然 天天拉粪
while  和上面差不多
debugger*  找出漏洞 社会进步有了HTML5才有的
function 娱乐业
this  焦点访谈
with   必须和谁捆绑
default  法律对错
if  条件句
throw 扔出来结果
delete 删除黑历史
in 
try
大姨妈还授予自己没有能力的亲戚受到尊敬 这个团体叫保留字，往往挂上某某文化保护的头衔、动物保护的头衔,其实哪个人没有贡献呀，这些人往往有统治者的感情  或者统治者想花点小钱 不用公开报告，或者军事用费
abstract
enum 
int
short
boolean
export
interface
static
byte
extends
long
super
char
final
native
synchronized
class
float
package
throws
const
goto
private
transient
debugger
implements
protected
volatile
doule
import
public
把非严格模式下运行时的保留字缩减为以下这些
class enum  extends super
conset export import
第5版在严格模式下还增加了限制
implement package public
interface private staric 
let protected yield
eval arguments

3.3变量
姨妈的魔法师松散类型的，就是可以用来保存任何类型的数据。
换句话说，每个变量仅仅使用一个保存值的占位符而已。
定义变量的时候要有魔法操作符var，后跟变量名，就是一个标识符，就是姨妈的普通孩子
 如var message 但像这样未经教育 初始化的变量，会保存一个特殊的值--undefined，会找不到对象，变成一个单身狗。
姨妈的普通孩子接受教育 这样一句话可以这样表示 var message="hi";
初始化 教育的过程就是那么简单，在修改变量值的同事可以修改值得类型。
就是小学教育、特殊学校教育还是。。。
var message ="hi";
message=100;//虽然这样做是合法的，但是是落后山区孩子父母的做法
还有一点，就是用var魔法操作只用于地方类-局部，因为你看还“魔法“太不正统了，用var操作的变量，魔法范围只是这个领域，是局部变量。如果它出现在一个内涵中，出了这个语境就就消失了。missing。

如果不用var操作符，就会变成全局变量，现在看来var还是小农思想，是个阻碍 迷信哦。
function test（）{
	message=“hi“；//全局变量
}
test（）；
alert（message）；//“hi”
在函数外部的任何地方都被访问到。
以上的两种做法都不推荐哦，第二种 如果省略var，会很出毛病，不识别等。

还可以一起教育很多小孩，一条语句定义多个变量，就像分班上课一样，但是他们要用逗号分开。
你看 var message =“hi“，
	found=false，
	age=29；
一下教育了三个，因为大姨妈是松散类型的，因而使用不同类型初始化的操作可以放在一条语句中，也就是他们用的是复班教学法，比较松散嘛。至于为啥要分三行，不浪费啊？ 因为钱花的值。让人明白了，和人交流了。

3.4数据类型
6个山寨小矮人出来了还记得不？
昂滴凡-单身狗 奴-一朵云 布尔-两个优秀的孩子 男博-太直白 思纯-博爱

3.4.1
typeof操作符
鉴于大姨妈太松散了，需要有个手段来检测孩子是什么角色类型  给定变量的数据类型--typeof就是搜索小孩的各项指标信息的操作符。对一个值使用后typeof操作符可能返回下列某个字符串：

“undefined” 如果这个值未定义
“boolean  ”如果这个只是布尔值
“string  ”如果这个值是字符串
“number ”如果这个值是数值
“object” 如果这个只是对象或者null
“founction” 如果这个值是函数
下面是几个使用typeof操作符的例子
 var message=“some string”;
alert (typeof message);//"string"
alert(typeof (message));//"string"
alert(typeof 95);//"nummber"

你看typeof操作符的操作数可以是狼人、文盲、一朵云、精灵、变量、可以是数值字面量。注意，typeof是一个操作符而不是函数，因此圆括号可以使用，也可以不使用。
他在判断null的时候经常会返回“object",因为null是一片云，虽然什么没有，但是它是一个空间。浏览器版本不同在对正则表达式调用typeof操作符的时候回返回“founction"。
在大姨妈眼里，函数是对象，不是数据类型。

3.4.2Undefine类型
昂滴凡类型只有一个值-肉体，有人的属性，所以有另一个称呼狼人。在var声明变量单位对其加以初始化教育时，没有说明上哪个学校，就是演示没有教育狼人的学校，这个孩子的肉体就是狼人，例如：
var message；
alert（message==undefined）；//true
与下面的代码是等价的
var message=undefined；
alert（message==undefined）；//true
下面这个代码呀，不常用，因为作者装逼说没必要加，那以后就不加了，呵。
字面值undefined狼人的主要目的是用于比较，人比他好，我哩个擦，套路。
引入这个狼人角色的意义在于正式区分空对象动物与未经初始化的变量没有受过教育的狼人。

动物和狼人还是有区别的，去教育局报名的是狼人，没去教育局的是动物，动物有个名字是问题。
var message；//虽然接受教育，没有具体学校上，但是拿到了检测证书
alert（message）；//“undefined”
alert（age）；//产生错误 


有点晕的是，去教育局的，没有学校上的是狼人。检测证是狼人
没去教育局的动物，公务员检测，检测证书也是狼人

var message；//这个变量声明之后默认取得了undefined值
alert（typeof message）；//“undefined”
alert ( typeof  age);//"underfine"
虽然两种变量从技术角度看有本质区别，但实际上无论对哪种变量也不可能执行真正的操作。

var是去教育局检测，没有学校上的是狼人
没去教育局检测，没有学校上的，typeof是公务员去家里检测的是狼人。


3.4.3Null类型
  奴是第二个只有一个值的数据类型，这个特殊的值是null了。大写的是类型，小写的是值。从逻辑角度来看，null值表示一个空对象指针，而这正是使用typeof操作符检测null值时返回“object”的原因，如下面的例子所示：
 var car = null；
alert（typeof car）；//“object”
如果定义的变量孩子准备在将来用于保存对象，那么最好将该变量初始化为null而不是其他值。
如果孩子有其它梦想，那么现在先不定形，这样只要检查这个孩子是不是奴就知道了他是否保存了一个对象的引用，如下面的例子所示：
 if（car ！=null）{
//对car对象执行某些操作
}
实际上，undefined值是派生自null值得，昂滴凡狼人是在奴的基础上的，大姨妈国庆那天规定对他们的相等性测试要返回true：alert（null==underfined）；//true
这是奴和狼人的关系。相等操作符处于比较目的会转换其操作数。
尽管奴和狼人有这样的关系，但是他们的用途完全不同。这话。。。还用说。编剧实在太low了，如果相同还有两个啊。
前面说了，无论什么情况都没必要把值设定成undefined狼人，可是同样的规则对null了却不使用。换句话说，只要确保孩子还没有一个真正的角色，就应该让这个孩子保存null值，null这个角色。这样做不仅可以提现他是空对象指针的管理，而且也有助于进一步区分null和undefined。
3.4.4Boolean类型
 布尔类型是大姨妈用的最多的一种类型，好使唤的角色群，该类型有两个小baby，true和false。这两个值与数字值不是一回事，因此true不一定等于1，false也不一定等一0.以下是为孩子赋予布尔角色类型值得例子：
var found = true；
var lost = false；
虽然他只有这两个小baby，但是大姨妈所有的孩子都与他俩有关，如果想把普通孩子转换成对应的Boolean值，可以调用转型函数 咒语，Boolean(),用法如下：
var message = “hello world！”；
var messageAsBoolean = Boolean（message）；
经过这个仪式，字符串message变成了一个Blooean值，变成了一员，如果想用这个转型函数咒语，要考大学 拼命打拼，才能进入上流社会 ，该值被曝存在messageAsBoolean变量中。可以对任何数据类型调用Boolean（）函数，而且返回一个Boolean值。至于返回的值是true还是false，取决于要转换的数值类型及其实际值。

下表显示对应的转换规则：
Boolean       true                                           false
String          任何非空字符串                        “ ”空字符串
Number       任何非零数字值（包括无穷大）   0和NaN
Object          任何对象                                    Null
Undefined     n/a                                          undefined
这些流转规则对理解流控制语句（如if语句）自动执行相应的Boolean转换非常重要，请看下面的代码：
 var message = “hello world！”；
if （message）{
	alert("Value is true");
}
运行这个示例，就会显示一个警告框，错误的使用一个对象而不是布尔值，就有可能彻底改变应用程序的流程。

3.4.5 Number类型
男博
是大姨妈最关注的数据类型了。该类型使用IEEE754格式(我靠 我的公交车。)来表示整数和浮点数值（也叫双精度数值）。为了支持各种数值类型，大姨妈国庆定义了不同的数值字面量格式。
最基本的数值字面值格式是十进制整数，
var intNum = 55；//整数
（八进制 或十六进制的字面值表示。如果字面值中的数值超过了范围，前导零会被忽略，后面的数值将被当作十进制数值解析。
 var octalNum1 =070 //八进制的56
 var octalNum1 =079 //无效的八进制数值--解析为79
 var octalNum1 =08  //无效的八进制数值--解析为8
八进制不要用，尼玛 不用你说这么多废话干嘛，装逼。。，会导致JS引擎抛出问题
尼玛下面还有十六进制，滚！
n/a（或N/A），是not applicable的缩写，意思是“不适用”）

1.浮点数值
浮点有个杀手锏e，哈哈，谁说只适合小点的，大的有e型号的。

包含一个小数点，且小数点后面至少有一位数字。
由于保存浮点数据需要的内存空间是保存整数值的两倍，因此大姨妈会不失时机地将浮点数值转换成整数值。显然，如果小数点之后没有跟任何数字，那么这个数值就可以当做整数值来保存。同样，如果浮点数值本身表示的就是一个整数（如1.0），那么该数值也会被转换为整数，如var floatNum1 = 1.；//小数点之后没有数字--解析为1
var floatNum2 =10.0;//整数--解析为10
对于那些极大或者极小的数值，可以用e表示法（即科学计数法）表示的浮点数值表示。
var floatNum1 = 3.125e7；//等于31250000

浮点有个毛病，就是误插

浮点类型的精确度不如整数型的，如0.1加0.2结果不是0.3 而是0.3000000000000004这个晓晓的舍入误差会导致无法测试特定的浮点数值。
永远不要测试某个特定的浮点数值。  又舍入误差，这是基于754数值的浮点计算的通病，其他语言使用这个754也有舍入误差。

2.数值范围 大姨妈为男博画地为牢
由于内存的限制，大姨妈斌不能保存世界上所有的树枝。如果某次计算超出了范围，那么会显示出Infinity（正无穷）值，如果这个值是负值，则会变成-Infinity(负无穷）.
如果返回了政府无穷，那么没下文了，无穷不能参与参与计算。
如果想看这个书实在最大值和最小值之间的吗？ 就用isFinite（）函数试试，是之间的会返回true。
var result = Number.MAX_VALUE+Number.MAX_VALUE;
alert(isFinite(result));//false

3.NaN 娜娜是个药丸，让他停不下来
   not a number ，是一个特殊值，表示一个本来要返回数值的操作数为范围数值的情况（这样就不会抛出错误了）。例如，在其他编程语言中，任何数值除以0都会导致错误，从而停止代码执行。但在大姨妈的后花园中，任何数值除以0会返回Nan，因此不会影响其他代码执行。
NaN与任何值都不相等和自己都不相等，包括NaN本身。比如我自己，别人说雪就是雪，我觉得不是，这是因为我没有得到应得的造成的。
下面的代码会返回false：
alert（NaN==NaN）；//false
大姨妈定义了isNaN（）函数，isNaN(）在收到一个值之后，会尝试将这个值转换成数值。某些不是数值的值会直接转换为数值，例如字符串“10”或Boolean值。而任何不能转换为数值的值都会导致这个函数返回true.

数值是个弯弯，不是弯弯才是真蓝人
alert（isNaN(NaN）);//true
alert（isNaN(10）);//false(10是一个数值)
alert（isNaN("10"）);//false（可以被转换成数值10）
alert（isNaN("blue"）);//true（不能转换成数值）
alert（isNaN(true）);//false（可以被转换成数值1）

娜娜内部有个套路
基于对象调用isNaN（）函数时，会首先调用对象的valueof()方法，确定该方法返回的值是否可以转换为数值，如果不能，则基于这个返回值再调用toString()方法，在测试返回值。这个过程也是大姨妈中内置函数和操作符的一般执行流程。

4.数制转换
有3个函数可以把非数值转换为数值 泰国变性神医：Number（）、parseInt()和parseFloat（）。第一个函数，即转型函数Number（）可以用于任何数据类型，number病毒好可怕，谁都可以变成弯弯。另外两个函数则专门用于吧字符串转换成数值。这3个函数杜宇同样的输入会有返回不同的效果。
Number()函数的转换规则如下。
--如果是Boolean值，true和false讲分别被转换为1和0.布尔见到伪娘变成bilibili伪娘，两个 网络 1 0伪娘。
--如果是数字值，只是简单的传入和返回。伪娘见伪娘还是伪娘。不能正视自己。
--如果是null一朵云，返回0。如果非让我选一个，我选洞洞
--如果是undefined 狼人，狼人变娜娜
--如果是字符串，思纯真是后宫多啊
 如果字符串中包含数字脱外套（包括前面带正号负号的情况），将其转换成十进制数值，即“1”会变成1，“123”会变成123，脱掉了外套，而“011”会变成11.这个。。。
如果字符串中包含有效的浮点格式脱外套，如“1.1”将其转化成对应的浮点数值（忽略前导零），前导零是汉奸，找到就可以起开了。
字符串中包含有效的十六进制格式，例如“0xf”,则将其转换为相同大小的十进制整数型数值；
如果字符串是空的（不包含任何字符），则将其转换为0；和奴一样。
如果字符串中包含除上述格式之外的字符，则将其转换为NaN.娜娜
。。。？娜娜也不是数值呀。。。
--如果是对象，则调用对象的valueof（）方法，然后依照前面的规则转换返回的值。如果转换的结果是NaN，则调用对象的toString()方法，然后再次依照前面的规则转换返回的字符串值。有点像直接经过娜娜的流程。
作者可怜我们，给了我们一些例子：
	var num1 = Number（“Hello world!”）;//NaN
	var num2= Number（“  ”）;		//0
	var num3= Number（“000011”）;	//11
	var num4= Number（true）;		//1

由于Number（）操作复杂，所以处理整数的时候用的parseInt()函数。卧槽尼玛
parseInt()忽略空格，如果找到第一个字符不是数字字符或者负号的，就转空字符串，然后返回出NaN娜娜，好粗暴 好喜欢。和number对待空不同哦。
对







































































































































































































